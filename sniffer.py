# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'sniffer.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from PyQt5.QtCore import *
from PyQt5 import QtCore, QtGui, QtWidgets
from sniff import *
from detail import *
from help import *
from globalFunc import *

### 抓包子进程
class Worker(QThread):
    def __init__(self):
        super().__init__()
    def run(self):
        StartSniff(filter=globalVal.sniff_filter, count=sniff_count)


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.setFixedSize(993, 708)
        Form.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        Form.setWindowTitle("网路嗅探器")

        self.state = QtWidgets.QLabel(Form)
        self.state.setGeometry(QtCore.QRect(880, 688, 100, 15))
        self.state.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignVCenter)
        font = QtGui.QFont()
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.state.setFont(font)
        self.state.setObjectName("state")
        self.state.lower()

        self.PktList = QtWidgets.QTableWidget(Form)
        self.PktList.setGeometry(QtCore.QRect(15, 101, 961, 581))
        self.PktList.setMinimumSize(QtCore.QSize(3, 0))
        #self.PktList.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        self.PktList.setToolTipDuration(-2)
        self.PktList.setAutoScrollMargin(10)
        self.PktList.setProperty("showDropIndicator", True)
        self.PktList.setDragDropMode(QtWidgets.QAbstractItemView.DragOnly)
        self.PktList.setSelectionMode(QtWidgets.QAbstractItemView.ContiguousSelection)
        self.PktList.setObjectName("PktList")
        self.PktList.setColumnCount(4)
        #self.PktList.setRowCount(20)
        self.PktList.setHorizontalHeaderLabels(['time','src','dst','info'])
        ###设置列宽
        self.PktList.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        #self.PktList.horizontalHeader().setSectionResizeMode(QHeaderView.ResizeToContents)
        # 只读不可修改
        self.PktList.setEditTriggers(QAbstractItemView.NoEditTriggers)
        self.PktList.setSelectionBehavior(QAbstractItemView.SelectRows)
        ## 点击事件
        self.PktList.doubleClicked.connect(self.click_line)
        ## 滚动条
        self.PktList.setHorizontalScrollMode(QAbstractItemView.ScrollPerPixel)
        ## 表头
        self.PktList.horizontalHeader().setStyleSheet(
            "QHeaderView::section{font: 'Consolas';color: black;};")
        font1=self.PktList.verticalHeader().font()
        font1.setBold(True)
        self.PktList.verticalHeader().setFont(font1)

        self.Startbtn = QtWidgets.QPushButton(Form)
        self.Startbtn.setGeometry(QtCore.QRect(640, 50, 93, 31))
        self.Startbtn.setObjectName("Startbtn")
        # 点击事件
        self.Startbtn.clicked.connect(self.click_start)

        self.Stopbtn = QtWidgets.QPushButton(Form)
        self.Stopbtn.setGeometry(QtCore.QRect(750, 50, 93, 31))
        self.Stopbtn.clicked.connect(self.click_stop)
        self.Stopbtn.setObjectName("Stopbtn")

        self.Savebtn = QtWidgets.QPushButton(Form)
        self.Savebtn.setGeometry(QtCore.QRect(860, 50, 93, 31))
        self.Savebtn.clicked.connect(self.click_save)
        self.Savebtn.setObjectName("Savebtn")

        self.helpbtn = QtWidgets.QPushButton(Form)
        self.helpbtn.setGeometry(QtCore.QRect(940, 5, 50, 31))
        font = QtGui.QFont()
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.helpbtn.setFont(font)
        self.helpbtn.setCursor(QtGui.QCursor(QtCore.Qt.WhatsThisCursor))
        op = QtWidgets.QGraphicsOpacityEffect()
        # 设置透明度的值，0.0到1.0，最小值0是透明，1是不透明
        op.setOpacity(0)
        self.helpbtn.setGraphicsEffect(op)
        self.helpbtn.raise_()
        #点击事件
        self.helpbtn.clicked.connect(self.click_help)
        self.helpbtn.setObjectName("helpbtn")

        self.lineEdit = QtWidgets.QLineEdit(Form)
        self.lineEdit.setGeometry(QtCore.QRect(100, 50, 521, 31))
        self.lineEdit.setObjectName("lineEdit")
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(30, 60, 72, 15))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")

        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(950, 10, 72, 15))
        font = QtGui.QFont()
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_2.lower()

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "网络嗅探器"))
        self.Startbtn.setText(_translate("Form", "开始"))
        self.Stopbtn.setText(_translate("Form", "停止"))
        self.Savebtn.setText(_translate("Form", "保存"))
        self.label.setText(_translate("Form", "Filter："))
        self.label_2.setText(_translate("Form", "帮助"))
        self.state.setText(_translate("Form", "已停止"))
        # self.helpbtn.setText(_translate("Form", "帮助"))

    ### 双击表单一行
    def click_line(self,index):
        if globalVal.stop_sniff_flag == False:
            return

        row = index.row()   ## 获取行号
        ## 生成窗口标题
        window_title = "row: " + str(row+1)
        #window_title+= "   time: " + self.PktList.item(row, 0).text()
        window_title+= "   src: " + self.PktList.item(row, 1).text()
        window_title+= "   dst: " + self.PktList.item(row, 2).text()

        ui_dialog = Ui_Dialog_detail()
        help_msg = QDialog()
        ui_dialog.setupUi(help_msg)
        help_msg.setWindowTitle(window_title)

        ## 处理显示内容
        html = str2html(globalVal.pkts_info[row])
        html = detailhtml(html)
        raw_html = rawhtml(globalVal.pkts_raw[row])
        raw_html = str2html(raw_html)
        ui_dialog.textBrowser1.setHtml(raw_html)
        ui_dialog.textBrowser.setHtml(html)

        ## 将当前包传递给对话弹窗实体
        ui_dialog.pkt = globalVal.sniff_pkts[row]

        help_msg.exec_()

    def click_help(self):
        ui_dialog = Ui_Dialog_help()
        help_msg = QDialog()
        ui_dialog.setupUi(help_msg)
        help_msg.setWindowTitle("帮助")
        help_msg.setWindowModality(Qt.ApplicationModal)
        help_msg.exec_()

    ### 开始抓包
    def click_start(self):
        if globalVal.stop_sniff_flag==False:
            return
        globalVal.sniff_filter=self.lineEdit.text()
        self.state.setText( "正在抓包……")
        self.cal = Worker()  # 创建一个线程
        self.cal.start()  # 线程启动

    def click_stop(self):
        if globalVal.stop_sniff_flag==True:
            return
        self.state.setText("已停止")
        try:
            globalVal.stop_sniff_flag=True
        except Exception as e:
            print(e)
            sys.exit(1)

    def click_save(self):
        # 获得包含文件路径+文件名的元组
        try:
            filename,filetype = QFileDialog.getSaveFileName(None, '选择保存路径', '.', 'pcap(*.pcap)')
        except Exception as e:
            print(e)
        if filename=='':
            return
        try:
            save_sniff(filename)
        except Exception as e:
            QMessageBox.critical(self, "错误", "保存错误")


